// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.meplayer.scouting.web.ui;

import com.meplayer.scouting.Jugador;
import com.meplayer.scouting.web.EntityTableColumnGenerator;
import com.meplayer.scouting.web.ui.JugadorView;
import com.vaadin.data.Item;
import com.vaadin.data.util.BeanContainer;
import com.vaadin.data.util.BeanItem;
import com.vaadin.ui.Table;
import java.util.List;

privileged aspect JugadorView_Roo_VaadinEntityView {
    
    public String JugadorView.getEntityName() {
        return "Jugador";
    }
    
    public Class<Jugador> JugadorView.getEntityClass() {
        return Jugador.class;
    }
    
    public boolean JugadorView.isCreateAllowed() {
        return true;
    }
    
    public boolean JugadorView.isUpdateAllowed() {
        return true;
    }
    
    public boolean JugadorView.isDeleteAllowed() {
        return true;
    }
    
    public List<Jugador> JugadorView.listEntities() {
        List<Jugador> list = Jugador.findAllJugadors();
        return list;
    }
    
    public Jugador JugadorView.saveEntity(Jugador entity) {
        if (entity == null) {
            return null;
        }
        return (Jugador) entity.merge();
    }
    
    public void JugadorView.deleteEntity(Jugador entity) {
        if (entity != null) {
            entity.remove();
        }
    }
    
    public boolean JugadorView.isNewEntity(Jugador entity) {
        return (entity != null && getIdForEntity(entity) == null);
    }
    
    public String JugadorView.getIdProperty() {
        return "id";
    }
    
    public String JugadorView.getVersionProperty() {
        return "version";
    }
    
    public Jugador JugadorView.createEntityInstance() {
        return new Jugador();
    }
    
    public BeanContainer<Long, Jugador> JugadorView.getTableContainer() {
        BeanContainer<Long, Jugador> container = new BeanContainer<Long, Jugador>(Jugador.class);
        container.setBeanIdProperty("id");
        for (Jugador entity : Jugador.findAllJugadors()) {
            container.addBean(entity);
        }
        return container;
    }
    
    public Item JugadorView.getItemForEntity(Jugador entity) {
        Item item = getTable().getItem(entity.getId());
        if (item == null) {
            item = new BeanItem<Jugador>(entity);
        }
        return item;
    }
    
    public Jugador JugadorView.getEntityForItem(Item item) {
        if (item != null) {
            return ((BeanItem<Jugador>) item).getBean();
        } else {
            return null;
        }
    }
    
    public Object JugadorView.getIdForEntity(Jugador entity) {
        return entity != null ? entity.getId() : null;
    }
    
    public void JugadorView.setupGeneratedColumns(Table table) {
        // Add generated columns here
    }
    
}
