// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.meplayer.scouting.web.ui;

import com.meplayer.scouting.Agente;
import com.meplayer.scouting.web.EntityTableColumnGenerator;
import com.meplayer.scouting.web.ui.AgenteView;
import com.vaadin.data.Item;
import com.vaadin.data.util.BeanContainer;
import com.vaadin.data.util.BeanItem;
import com.vaadin.ui.Table;
import java.util.List;

privileged aspect AgenteView_Roo_VaadinEntityView {
    
    public String AgenteView.getEntityName() {
        return "Agente";
    }
    
    public Class<Agente> AgenteView.getEntityClass() {
        return Agente.class;
    }
    
    public boolean AgenteView.isCreateAllowed() {
        return true;
    }
    
    public boolean AgenteView.isUpdateAllowed() {
        return true;
    }
    
    public boolean AgenteView.isDeleteAllowed() {
        return true;
    }
    
    public List<Agente> AgenteView.listEntities() {
        List<Agente> list = Agente.findAllAgentes();
        return list;
    }
    
    public Agente AgenteView.saveEntity(Agente entity) {
        if (entity == null) {
            return null;
        }
        return (Agente) entity.merge();
    }
    
    public void AgenteView.deleteEntity(Agente entity) {
        if (entity != null) {
            entity.remove();
        }
    }
    
    public boolean AgenteView.isNewEntity(Agente entity) {
        return (entity != null && getIdForEntity(entity) == null);
    }
    
    public String AgenteView.getIdProperty() {
        return "id";
    }
    
    public String AgenteView.getVersionProperty() {
        return "version";
    }
    
    public Agente AgenteView.createEntityInstance() {
        return new Agente();
    }
    
    public BeanContainer<Long, Agente> AgenteView.getTableContainer() {
        BeanContainer<Long, Agente> container = new BeanContainer<Long, Agente>(Agente.class);
        container.setBeanIdProperty("id");
        for (Agente entity : Agente.findAllAgentes()) {
            container.addBean(entity);
        }
        return container;
    }
    
    public Item AgenteView.getItemForEntity(Agente entity) {
        Item item = getTable().getItem(entity.getId());
        if (item == null) {
            item = new BeanItem<Agente>(entity);
        }
        return item;
    }
    
    public Agente AgenteView.getEntityForItem(Item item) {
        if (item != null) {
            return ((BeanItem<Agente>) item).getBean();
        } else {
            return null;
        }
    }
    
    public Object AgenteView.getIdForEntity(Agente entity) {
        return entity != null ? entity.getId() : null;
    }
    
    public void AgenteView.setupGeneratedColumns(Table table) {
        // Add generated columns here
    }
    
}
