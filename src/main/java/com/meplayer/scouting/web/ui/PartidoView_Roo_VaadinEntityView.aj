// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.meplayer.scouting.web.ui;

import com.meplayer.scouting.Partido;
import com.meplayer.scouting.web.EntityTableColumnGenerator;
import com.meplayer.scouting.web.ui.PartidoView;
import com.vaadin.data.Item;
import com.vaadin.data.util.BeanContainer;
import com.vaadin.data.util.BeanItem;
import com.vaadin.ui.Table;
import java.util.List;

privileged aspect PartidoView_Roo_VaadinEntityView {
    
    public String PartidoView.getEntityName() {
        return "Partido";
    }
    
    public Class<Partido> PartidoView.getEntityClass() {
        return Partido.class;
    }
    
    public boolean PartidoView.isCreateAllowed() {
        return true;
    }
    
    public boolean PartidoView.isUpdateAllowed() {
        return true;
    }
    
    public boolean PartidoView.isDeleteAllowed() {
        return true;
    }
    
    public List<Partido> PartidoView.listEntities() {
        List<Partido> list = Partido.findAllPartidoes();
        return list;
    }
    
    public Partido PartidoView.saveEntity(Partido entity) {
        if (entity == null) {
            return null;
        }
        return (Partido) entity.merge();
    }
    
    public void PartidoView.deleteEntity(Partido entity) {
        if (entity != null) {
            entity.remove();
        }
    }
    
    public boolean PartidoView.isNewEntity(Partido entity) {
        return (entity != null && getIdForEntity(entity) == null);
    }
    
    public String PartidoView.getIdProperty() {
        return "id";
    }
    
    public String PartidoView.getVersionProperty() {
        return "version";
    }
    
    public Partido PartidoView.createEntityInstance() {
        return new Partido();
    }
    
    public BeanContainer<Long, Partido> PartidoView.getTableContainer() {
        BeanContainer<Long, Partido> container = new BeanContainer<Long, Partido>(Partido.class);
        container.setBeanIdProperty("id");
        for (Partido entity : Partido.findAllPartidoes()) {
            container.addBean(entity);
        }
        return container;
    }
    
    public Item PartidoView.getItemForEntity(Partido entity) {
        Item item = getTable().getItem(entity.getId());
        if (item == null) {
            item = new BeanItem<Partido>(entity);
        }
        return item;
    }
    
    public Partido PartidoView.getEntityForItem(Item item) {
        if (item != null) {
            return ((BeanItem<Partido>) item).getBean();
        } else {
            return null;
        }
    }
    
    public Object PartidoView.getIdForEntity(Partido entity) {
        return entity != null ? entity.getId() : null;
    }
    
    public void PartidoView.setupGeneratedColumns(Table table) {
        // Add generated columns here
    }
    
}
